From e778d89c9b42cb9ffc4ffb6d4424969a53b700f1 Mon Sep 17 00:00:00 2001
From: AbduSharif <57298920+AbduSharif@users.noreply.github.com>
Date: Fri, 21 Apr 2023 19:21:09 +0200
Subject: [PATCH] Update SDL.java

---
 app/src/main/java/org/libsdl/app/SDL.java | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/app/src/main/java/org/libsdl/app/SDL.java b/app/src/main/java/org/libsdl/app/SDL.java
index fb7f7319..dafc0cb8 100644
--- a/app/src/main/java/org/libsdl/app/SDL.java
+++ b/app/src/main/java/org/libsdl/app/SDL.java
@@ -2,7 +2,8 @@

 import android.content.Context;

-import java.lang.reflect.*;
+import java.lang.Class;
+import java.lang.reflect.Method;

 /**
     SDL library initialization
@@ -51,16 +52,16 @@ public static void loadLibrary(String libraryName) throws UnsatisfiedLinkError,
             // To use ReLinker, just add it as a dependency.  For more information, see
             // https://github.com/KeepSafe/ReLinker for ReLinker's repository.
             //
-            Class relinkClass = mContext.getClassLoader().loadClass("com.getkeepsafe.relinker.ReLinker");
-            Class relinkListenerClass = mContext.getClassLoader().loadClass("com.getkeepsafe.relinker.ReLinker$LoadListener");
-            Class contextClass = mContext.getClassLoader().loadClass("android.content.Context");
-            Class stringClass = mContext.getClassLoader().loadClass("java.lang.String");
+            Class<?> relinkClass = mContext.getClassLoader().loadClass("com.getkeepsafe.relinker.ReLinker");
+            Class<?> relinkListenerClass = mContext.getClassLoader().loadClass("com.getkeepsafe.relinker.ReLinker$LoadListener");
+            Class<?> contextClass = mContext.getClassLoader().loadClass("android.content.Context");
+            Class<?> stringClass = mContext.getClassLoader().loadClass("java.lang.String");

             // Get a 'force' instance of the ReLinker, so we can ensure libraries are reinstalled if
             // they've changed during updates.
             Method forceMethod = relinkClass.getDeclaredMethod("force");
             Object relinkInstance = forceMethod.invoke(null);
-            Class relinkInstanceClass = relinkInstance.getClass();
+            Class<?> relinkInstanceClass = relinkInstance.getClass();

             // Actually load the library!
             Method loadMethod = relinkInstanceClass.getDeclaredMethod("loadLibrary", contextClass, stringClass, stringClass, relinkListenerClass);
@@ -77,7 +78,7 @@ public static void loadLibrary(String libraryName) throws UnsatisfiedLinkError,
             catch (final SecurityException se) {
                 throw se;
             }
-        }
+        }
     }

     protected static Context mContext;
